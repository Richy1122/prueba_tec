{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Richy\\\\Documents\\\\prueba_tecnica\\\\fronted\\\\src\\\\components\\\\CurrentResult.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { getCatFact, getGif } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CurrentResult = () => {\n  _s();\n  const [fact, setFact] = useState('');\n  const [gifQuery, setGifQuery] = useState('');\n  const [gifUrl, setGifUrl] = useState('');\n\n  // Obtener el Cat Fact\n  const fetchCatFact = async () => {\n    try {\n      const response = await getCatFact();\n      setFact(response.data.fact);\n    } catch (error) {\n      console.error('Error al obtener Cat Fact:', error);\n    }\n  };\n\n  // Obtener el GIF según la palabra clave\n  const fetchGif = async () => {\n    if (!gifQuery.trim()) {\n      alert('Por favor ingresa una palabra clave.');\n      return;\n    }\n    try {\n      const response = await getGif(gifQuery.trim());\n      setGifUrl(response.data.url);\n    } catch (error) {\n      console.error('Error al obtener el gif:', error);\n    }\n  };\n\n  // Guardar los datos (esto suponiendo que se guarda automáticamente desde el backend cuando se accede a /history)\n  const handleGuardar = async () => {\n    try {\n      await fetchCatFact();\n      await fetchGif();\n      alert('Datos generados y guardados');\n    } catch (error) {\n      console.error('Error al guardar datos:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: '600px',\n      margin: 'auto',\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchCatFact,\n      children: \"Traer Cat Fact\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), fact && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '10px',\n        padding: '10px',\n        border: '1px solid #ccc'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Fact:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), \" \", fact]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Palabra clave para el gif\",\n        value: gifQuery,\n        onChange: e => setGifQuery(e.target.value),\n        style: {\n          width: '100%',\n          padding: '8px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchGif,\n        style: {\n          marginTop: '10px'\n        },\n        children: \"Generar Gif\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), gifUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '10px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: gifUrl,\n        alt: \"Gif relacionado\",\n        style: {\n          maxWidth: '100%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGuardar,\n      style: {\n        marginTop: '30px',\n        backgroundColor: '#4CAF50',\n        color: 'white',\n        padding: '10px'\n      },\n      children: \"Guardar en historial\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(CurrentResult, \"q4MJ2my1sxNNXfn0z5HsddnJH08=\");\n_c = CurrentResult;\nexport default CurrentResult;\nvar _c;\n$RefreshReg$(_c, \"CurrentResult\");","map":{"version":3,"names":["React","useState","getCatFact","getGif","jsxDEV","_jsxDEV","CurrentResult","_s","fact","setFact","gifQuery","setGifQuery","gifUrl","setGifUrl","fetchCatFact","response","data","error","console","fetchGif","trim","alert","url","handleGuardar","style","maxWidth","margin","padding","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","marginTop","border","type","placeholder","value","onChange","e","target","width","src","alt","backgroundColor","color","_c","$RefreshReg$"],"sources":["C:/Users/Richy/Documents/prueba_tecnica/fronted/src/components/CurrentResult.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { getCatFact, getGif } from '../services/api';\r\n\r\nconst CurrentResult = () => {\r\n  const [fact, setFact] = useState('');\r\n  const [gifQuery, setGifQuery] = useState('');\r\n  const [gifUrl, setGifUrl] = useState('');\r\n\r\n  // Obtener el Cat Fact\r\n  const fetchCatFact = async () => {\r\n    try {\r\n      const response = await getCatFact();\r\n      setFact(response.data.fact);\r\n    } catch (error) {\r\n      console.error('Error al obtener Cat Fact:', error);\r\n    }\r\n  };\r\n\r\n  // Obtener el GIF según la palabra clave\r\n  const fetchGif = async () => {\r\n    if (!gifQuery.trim()) {\r\n      alert('Por favor ingresa una palabra clave.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await getGif(gifQuery.trim());\r\n      setGifUrl(response.data.url);\r\n    } catch (error) {\r\n      console.error('Error al obtener el gif:', error);\r\n    }\r\n  };\r\n\r\n  // Guardar los datos (esto suponiendo que se guarda automáticamente desde el backend cuando se accede a /history)\r\n  const handleGuardar = async () => {\r\n    try {\r\n      await fetchCatFact();\r\n      await fetchGif();\r\n      alert('Datos generados y guardados');\r\n    } catch (error) {\r\n      console.error('Error al guardar datos:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ maxWidth: '600px', margin: 'auto', padding: '20px' }}>\r\n      {/* 1. Botón y Cat Fact */}\r\n      <button onClick={fetchCatFact}>Traer Cat Fact</button>\r\n      {fact && (\r\n        <div style={{ marginTop: '10px', padding: '10px', border: '1px solid #ccc' }}>\r\n          <strong>Fact:</strong> {fact}\r\n        </div>\r\n      )}\r\n\r\n      {/* 2. Input de búsqueda de gif y botón */}\r\n      <div style={{ marginTop: '20px' }}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Palabra clave para el gif\"\r\n          value={gifQuery}\r\n          onChange={(e) => setGifQuery(e.target.value)}\r\n          style={{ width: '100%', padding: '8px' }}\r\n        />\r\n        <button onClick={fetchGif} style={{ marginTop: '10px' }}>Generar Gif</button>\r\n      </div>\r\n\r\n      {gifUrl && (\r\n        <div style={{ marginTop: '10px' }}>\r\n          <img src={gifUrl} alt=\"Gif relacionado\" style={{ maxWidth: '100%' }} />\r\n        </div>\r\n      )}\r\n\r\n      {/* 3. Botón de Guardar */}\r\n      <button onClick={handleGuardar} style={{ marginTop: '30px', backgroundColor: '#4CAF50', color: 'white', padding: '10px' }}>\r\n        Guardar en historial\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CurrentResult;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}