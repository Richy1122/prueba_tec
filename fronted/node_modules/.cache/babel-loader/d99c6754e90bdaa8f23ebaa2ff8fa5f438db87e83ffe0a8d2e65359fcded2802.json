{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Richy\\\\Documents\\\\prueba_tecnica\\\\fronted\\\\src\\\\components\\\\CurrentResult.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getCatFact, getGif } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CurrentResult = () => {\n  _s();\n  const [fact, setFact] = useState('');\n  const [gifUrl, setGifUrl] = useState('');\n  const [gifQuery, setGifQuery] = useState('');\n  const [showFact, setShowFact] = useState(true);\n\n  // Obtener un nuevo cat fact\n  const fetchFactOnly = async () => {\n    try {\n      const response = await getCatFact();\n      setFact(response.data.fact);\n    } catch (error) {\n      console.error(\"Error al obtener cat fact:\", error);\n    }\n  };\n\n  // Obtener un gif basado en el input del usuario\n  const fetchGifWithQuery = async () => {\n    if (!gifQuery.trim()) {\n      alert(\"Por favor ingresa una palabra para buscar el gif.\");\n      return;\n    }\n    try {\n      const response = await getGif(gifQuery.trim());\n      setGifUrl(response.data.url);\n    } catch (error) {\n      console.error(\"Error al obtener gif:\", error);\n    }\n  };\n\n  // Mostrar fact\n  const handleShowFact = async () => {\n    setShowFact(true);\n    await fetchFactOnly();\n  };\n\n  // Mostrar gif\n  const handleShowGif = async () => {\n    setShowFact(false);\n    await fetchGifWithQuery();\n  };\n  useEffect(() => {\n    fetchFactOnly();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"current-result\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleShowFact,\n        children: \"Ver Fact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleShowGif,\n        children: \"Ver Gif\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), !showFact && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: '10px 0'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Escribe una palabra para el gif\",\n        value: gifQuery,\n        onChange: e => setGifQuery(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), showFact ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fact-container\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: fact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gif-container\",\n      children: gifUrl ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: gifUrl,\n        alt: \"Gif relacionado\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No se encontr\\xF3 gif\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(CurrentResult, \"dK3YOuLa6uKcNIfu6w7vZv+18RE=\");\n_c = CurrentResult;\nexport default CurrentResult;\nvar _c;\n$RefreshReg$(_c, \"CurrentResult\");","map":{"version":3,"names":["React","useState","useEffect","getCatFact","getGif","jsxDEV","_jsxDEV","CurrentResult","_s","fact","setFact","gifUrl","setGifUrl","gifQuery","setGifQuery","showFact","setShowFact","fetchFactOnly","response","data","error","console","fetchGifWithQuery","trim","alert","url","handleShowFact","handleShowGif","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","style","margin","type","placeholder","value","onChange","e","target","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/Richy/Documents/prueba_tecnica/fronted/src/components/CurrentResult.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { getCatFact, getGif } from '../services/api';\r\n\r\nconst CurrentResult = () => {\r\n  const [fact, setFact] = useState('');\r\n  const [gifUrl, setGifUrl] = useState('');\r\n  const [gifQuery, setGifQuery] = useState('');\r\n  const [showFact, setShowFact] = useState(true);\r\n\r\n  // Obtener un nuevo cat fact\r\n  const fetchFactOnly = async () => {\r\n    try {\r\n      const response = await getCatFact();\r\n      setFact(response.data.fact);\r\n    } catch (error) {\r\n      console.error(\"Error al obtener cat fact:\", error);\r\n    }\r\n  };\r\n\r\n  // Obtener un gif basado en el input del usuario\r\n  const fetchGifWithQuery = async () => {\r\n    if (!gifQuery.trim()) {\r\n      alert(\"Por favor ingresa una palabra para buscar el gif.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await getGif(gifQuery.trim());\r\n      setGifUrl(response.data.url);\r\n    } catch (error) {\r\n      console.error(\"Error al obtener gif:\", error);\r\n    }\r\n  };\r\n\r\n  // Mostrar fact\r\n  const handleShowFact = async () => {\r\n    setShowFact(true);\r\n    await fetchFactOnly();\r\n  };\r\n\r\n  // Mostrar gif\r\n  const handleShowGif = async () => {\r\n    setShowFact(false);\r\n    await fetchGifWithQuery();\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchFactOnly();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"current-result\">\r\n      <div className=\"buttons-container\">\r\n        <button onClick={handleShowFact}>Ver Fact</button>\r\n        <button onClick={handleShowGif}>Ver Gif</button>\r\n      </div>\r\n\r\n      {!showFact && (\r\n        <div style={{ margin: '10px 0' }}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Escribe una palabra para el gif\"\r\n            value={gifQuery}\r\n            onChange={(e) => setGifQuery(e.target.value)}\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      {showFact ? (\r\n        <div className=\"fact-container\">\r\n          <p>{fact}</p>\r\n        </div>\r\n      ) : (\r\n        <div className=\"gif-container\">\r\n          {gifUrl ? (\r\n            <img src={gifUrl} alt=\"Gif relacionado\" />\r\n          ) : (\r\n            <p>No se encontr√≥ gif</p>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CurrentResult;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}