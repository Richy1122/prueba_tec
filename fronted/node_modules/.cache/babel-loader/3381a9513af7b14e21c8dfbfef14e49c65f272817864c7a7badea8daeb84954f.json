{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Richy\\\\Documents\\\\prueba_tecnica\\\\fronted\\\\src\\\\components\\\\CurrentResult.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getCatFact, getGif } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CurrentResult = () => {\n  _s();\n  const [fact, setFact] = useState('');\n  const [gifUrl, setGifUrl] = useState('');\n  const fetchFact = async () => {\n    try {\n      const response = await getCatFact();\n      setFact(response.data.fact);\n    } catch (error) {\n      console.error(\"Error al obtener fact:\", error);\n    }\n  };\n  const fetchGif = async () => {\n    try {\n      const query = fact.split(' ').slice(0, 3).join(' ');\n      const response = await getGif(query);\n      setGifUrl(response.data.url);\n    } catch (error) {\n      console.error(\"Error al obtener gif:\", error);\n    }\n  };\n  useEffect(() => {\n    const handleUpdate = async () => {\n      await fetchFact();\n      await fetchGif();\n    };\n    handleUpdate(); // Se ejecuta al cargar el componente\n  }, []); // Este useEffect se ejecuta una sola vez cuando el componente se monta\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"current-result\",\n    children: [gifUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: gifUrl,\n      alt: \"Gif relacionado\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: fact\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpdate,\n      children: \"Actualizar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(CurrentResult, \"W3M3xNuU3O0c2d4CBfBliCEPAzA=\");\n_c = CurrentResult;\nexport default CurrentResult;\nvar _c;\n$RefreshReg$(_c, \"CurrentResult\");","map":{"version":3,"names":["React","useState","useEffect","getCatFact","getGif","jsxDEV","_jsxDEV","CurrentResult","_s","fact","setFact","gifUrl","setGifUrl","fetchFact","response","data","error","console","fetchGif","query","split","slice","join","url","handleUpdate","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Richy/Documents/prueba_tecnica/fronted/src/components/CurrentResult.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { getCatFact, getGif } from '../services/api';\r\n\r\nconst CurrentResult = () => {\r\n  const [fact, setFact] = useState('');\r\n  const [gifUrl, setGifUrl] = useState('');\r\n\r\n  const fetchFact = async () => {\r\n    try {\r\n      const response = await getCatFact();\r\n      setFact(response.data.fact);\r\n    } catch (error) {\r\n      console.error(\"Error al obtener fact:\", error);\r\n    }\r\n  };\r\n\r\n  const fetchGif = async () => {\r\n    try {\r\n      const query = fact.split(' ').slice(0, 3).join(' ');\r\n      const response = await getGif(query);\r\n      setGifUrl(response.data.url);\r\n    } catch (error) {\r\n      console.error(\"Error al obtener gif:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleUpdate = async () => {\r\n      await fetchFact();\r\n      await fetchGif();\r\n    };\r\n    \r\n    handleUpdate(); // Se ejecuta al cargar el componente\r\n\r\n  }, []);  // Este useEffect se ejecuta una sola vez cuando el componente se monta\r\n\r\n  return (\r\n    <div className=\"current-result\">\r\n      {gifUrl && <img src={gifUrl} alt=\"Gif relacionado\" />}\r\n      <p>{fact}</p>\r\n      <button onClick={handleUpdate}>Actualizar</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CurrentResult;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,UAAU,EAAEC,MAAM,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMY,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMX,UAAU,CAAC,CAAC;MACnCO,OAAO,CAACI,QAAQ,CAACC,IAAI,CAACN,IAAI,CAAC;IAC7B,CAAC,CAAC,OAAOO,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;EAED,MAAME,QAAQ,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAI;MACF,MAAMC,KAAK,GAAGV,IAAI,CAACW,KAAK,CAAC,GAAG,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC;MACnD,MAAMR,QAAQ,GAAG,MAAMV,MAAM,CAACe,KAAK,CAAC;MACpCP,SAAS,CAACE,QAAQ,CAACC,IAAI,CAACQ,GAAG,CAAC;IAC9B,CAAC,CAAC,OAAOP,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;EAEDd,SAAS,CAAC,MAAM;IACd,MAAMsB,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,MAAMX,SAAS,CAAC,CAAC;MACjB,MAAMK,QAAQ,CAAC,CAAC;IAClB,CAAC;IAEDM,YAAY,CAAC,CAAC,CAAC,CAAC;EAElB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAE;;EAET,oBACElB,OAAA;IAAKmB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,GAC5Bf,MAAM,iBAAIL,OAAA;MAAKqB,GAAG,EAAEhB,MAAO;MAACiB,GAAG,EAAC;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrD1B,OAAA;MAAAoB,QAAA,EAAIjB;IAAI;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACb1B,OAAA;MAAQ2B,OAAO,EAAET,YAAa;MAAAE,QAAA,EAAC;IAAU;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/C,CAAC;AAEV,CAAC;AAACxB,EAAA,CAxCID,aAAa;AAAA2B,EAAA,GAAb3B,aAAa;AA0CnB,eAAeA,aAAa;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}