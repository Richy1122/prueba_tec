{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getCatFact, getGif } from '../services/api';\nconst CurrentResult = () => {\n  _s();\n  const [fact, setFact] = useState('');\n  const [gifUrl, setGifUrl] = useState('');\n  const fetchFact = async () => {\n    try {\n      const response = await getCatFact();\n      setFact(response.data.fact);\n    } catch (error) {\n      console.error(\"Error al obtener fact:\", error);\n    }\n  };\n  const fetchGif = async () => {\n    try {\n      const query = fact.split(' ').slice(0, 3).join(' ');\n      const response = await getGif(query);\n      setGifUrl(response.data.url);\n    } catch (error) {\n      console.error(\"Error al obtener gif:\", error);\n    }\n  };\n  const handleUpdate = async () => {\n    await fetchFact();\n    await fetchGif();\n  };\n  useEffect(() => {\n    const fetchFact = async () => {\n      try {\n        const response = await getCatFact();\n        setFact(response.data.fact);\n      } catch (error) {\n        console.error(\"Error al obtener fact:\", error);\n      }\n    };\n    const fetchGif = async () => {\n      try {\n        const query = fact.split(' ').slice(0, 3).join(' ');\n        const response = await getGif(query);\n        setGifUrl(response.data.url);\n      } catch (error) {\n        console.error(\"Error al obtener gif:\", error);\n      }\n    };\n    const handleUpdate = async () => {\n      await fetchFact();\n      await fetchGif();\n    };\n    handleUpdate();\n  }, [fact]); // Solo dependemos de `fact` aquí\n};\n_s(CurrentResult, \"W3M3xNuU3O0c2d4CBfBliCEPAzA=\");\n_c = CurrentResult;\nexport default CurrentResult;\nvar _c;\n$RefreshReg$(_c, \"CurrentResult\");","map":{"version":3,"names":["React","useState","useEffect","getCatFact","getGif","CurrentResult","_s","fact","setFact","gifUrl","setGifUrl","fetchFact","response","data","error","console","fetchGif","query","split","slice","join","url","handleUpdate","_c","$RefreshReg$"],"sources":["C:/Users/Richy/Documents/prueba_tecnica/fronted/src/components/CurrentResult.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { getCatFact, getGif } from '../services/api';\r\n\r\nconst CurrentResult = () => {\r\n  const [fact, setFact] = useState('');\r\n  const [gifUrl, setGifUrl] = useState('');\r\n\r\n  const fetchFact = async () => {\r\n    try {\r\n      const response = await getCatFact();\r\n      setFact(response.data.fact);\r\n    } catch (error) {\r\n      console.error(\"Error al obtener fact:\", error);\r\n    }\r\n  };\r\n\r\n  const fetchGif = async () => {\r\n    try {\r\n      const query = fact.split(' ').slice(0, 3).join(' ');\r\n      const response = await getGif(query);\r\n      setGifUrl(response.data.url);\r\n    } catch (error) {\r\n      console.error(\"Error al obtener gif:\", error);\r\n    }\r\n  };\r\n\r\n  const handleUpdate = async () => {\r\n    await fetchFact();\r\n    await fetchGif();\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchFact = async () => {\r\n      try {\r\n        const response = await getCatFact();\r\n        setFact(response.data.fact);\r\n      } catch (error) {\r\n        console.error(\"Error al obtener fact:\", error);\r\n      }\r\n    };\r\n  \r\n    const fetchGif = async () => {\r\n      try {\r\n        const query = fact.split(' ').slice(0, 3).join(' ');\r\n        const response = await getGif(query);\r\n        setGifUrl(response.data.url);\r\n      } catch (error) {\r\n        console.error(\"Error al obtener gif:\", error);\r\n      }\r\n    };\r\n  \r\n    const handleUpdate = async () => {\r\n      await fetchFact();\r\n      await fetchGif();\r\n    };\r\n  \r\n    handleUpdate();\r\n  }, [fact]);  // Solo dependemos de `fact` aquí\r\n};\r\n\r\nexport default CurrentResult;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,UAAU,EAAEC,MAAM,QAAQ,iBAAiB;AAEpD,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMU,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMT,UAAU,CAAC,CAAC;MACnCK,OAAO,CAACI,QAAQ,CAACC,IAAI,CAACN,IAAI,CAAC;IAC7B,CAAC,CAAC,OAAOO,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;EAED,MAAME,QAAQ,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAI;MACF,MAAMC,KAAK,GAAGV,IAAI,CAACW,KAAK,CAAC,GAAG,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC;MACnD,MAAMR,QAAQ,GAAG,MAAMR,MAAM,CAACa,KAAK,CAAC;MACpCP,SAAS,CAACE,QAAQ,CAACC,IAAI,CAACQ,GAAG,CAAC;IAC9B,CAAC,CAAC,OAAOP,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;EAED,MAAMQ,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAMX,SAAS,CAAC,CAAC;IACjB,MAAMK,QAAQ,CAAC,CAAC;EAClB,CAAC;EAEDd,SAAS,CAAC,MAAM;IACd,MAAMS,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMT,UAAU,CAAC,CAAC;QACnCK,OAAO,CAACI,QAAQ,CAACC,IAAI,CAACN,IAAI,CAAC;MAC7B,CAAC,CAAC,OAAOO,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF,CAAC;IAED,MAAME,QAAQ,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACF,MAAMC,KAAK,GAAGV,IAAI,CAACW,KAAK,CAAC,GAAG,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC;QACnD,MAAMR,QAAQ,GAAG,MAAMR,MAAM,CAACa,KAAK,CAAC;QACpCP,SAAS,CAACE,QAAQ,CAACC,IAAI,CAACQ,GAAG,CAAC;MAC9B,CAAC,CAAC,OAAOP,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC;IAED,MAAMQ,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,MAAMX,SAAS,CAAC,CAAC;MACjB,MAAMK,QAAQ,CAAC,CAAC;IAClB,CAAC;IAEDM,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,CAACf,IAAI,CAAC,CAAC,CAAC,CAAE;AACf,CAAC;AAACD,EAAA,CAvDID,aAAa;AAAAkB,EAAA,GAAblB,aAAa;AAyDnB,eAAeA,aAAa;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}