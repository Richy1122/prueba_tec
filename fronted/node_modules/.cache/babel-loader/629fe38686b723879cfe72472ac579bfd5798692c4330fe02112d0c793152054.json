{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Richy\\\\Documents\\\\prueba_tecnica\\\\fronted\\\\src\\\\components\\\\CurrentResult.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { getCatFact, getGif } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CurrentResult = () => {\n  _s();\n  const [fact, setFact] = useState('');\n  const [gifUrl, setGifUrl] = useState('');\n  const [showFact, setShowFact] = useState(true); // Estado para controlar la vista activa (Fact/Gif)\n\n  // Función para obtener un Cat Fact\n  const fetchFact = async () => {\n    try {\n      const response = await getCatFact();\n      setFact(response.data.fact); // Suponiendo que la respuesta tiene un campo \"fact\"\n    } catch (error) {\n      console.error(\"Error al obtener fact:\", error);\n    }\n  };\n\n  // Función para obtener un Gif basado en el hecho (fact)\n  const fetchGif = async () => {\n    try {\n      const query = fact.split(' ').slice(0, 3).join(' '); // Tomamos las primeras 3 palabras del hecho como query\n      const response = await getGif(query);\n      setGifUrl(response.data.url); // Suponiendo que la respuesta tiene un campo \"url\" con el gif\n    } catch (error) {\n      console.error(\"Error al obtener gif:\", error);\n    }\n  };\n\n  // Función para actualizar tanto el Cat Fact como el Gif\n  const handleUpdate = useCallback(async () => {\n    await fetchFact();\n    await fetchGif();\n  }, [fact]);\n  useEffect(() => {\n    handleUpdate(); // Ejecutar cuando el componente se monta\n  }, [handleUpdate]);\n\n  // Manejadores para cambiar entre Fact y Gif\n  const handleShowFact = () => {\n    setShowFact(true); // Muestra el Cat Fact\n  };\n  const handleShowGif = () => {\n    setShowFact(false); // Muestra el Gif\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"current-result\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleShowFact,\n        children: \"Cat Fact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleShowGif,\n        children: \"Gif\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), showFact ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fact-container\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: fact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gif-container\",\n      children: gifUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: gifUrl,\n        alt: \"Gif relacionado\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 22\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpdate,\n      children: \"Actualizar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(CurrentResult, \"F75DvOD25lGHRC05IDgX2T97lJo=\");\n_c = CurrentResult;\nexport default CurrentResult;\nvar _c;\n$RefreshReg$(_c, \"CurrentResult\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","getCatFact","getGif","jsxDEV","_jsxDEV","CurrentResult","_s","fact","setFact","gifUrl","setGifUrl","showFact","setShowFact","fetchFact","response","data","error","console","fetchGif","query","split","slice","join","url","handleUpdate","handleShowFact","handleShowGif","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/Richy/Documents/prueba_tecnica/fronted/src/components/CurrentResult.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { getCatFact, getGif } from '../services/api';\r\n\r\nconst CurrentResult = () => {\r\n  const [fact, setFact] = useState('');\r\n  const [gifUrl, setGifUrl] = useState('');\r\n  const [showFact, setShowFact] = useState(true); // Estado para controlar la vista activa (Fact/Gif)\r\n\r\n  // Función para obtener un Cat Fact\r\n  const fetchFact = async () => {\r\n    try {\r\n      const response = await getCatFact();\r\n      setFact(response.data.fact); // Suponiendo que la respuesta tiene un campo \"fact\"\r\n    } catch (error) {\r\n      console.error(\"Error al obtener fact:\", error);\r\n    }\r\n  };\r\n\r\n  // Función para obtener un Gif basado en el hecho (fact)\r\n  const fetchGif = async () => {\r\n    try {\r\n      const query = fact.split(' ').slice(0, 3).join(' '); // Tomamos las primeras 3 palabras del hecho como query\r\n      const response = await getGif(query);\r\n      setGifUrl(response.data.url); // Suponiendo que la respuesta tiene un campo \"url\" con el gif\r\n    } catch (error) {\r\n      console.error(\"Error al obtener gif:\", error);\r\n    }\r\n  };\r\n\r\n  // Función para actualizar tanto el Cat Fact como el Gif\r\n  const handleUpdate = useCallback(async () => {\r\n    await fetchFact();\r\n    await fetchGif();\r\n  }, [fact]);\r\n\r\n  useEffect(() => {\r\n    handleUpdate(); // Ejecutar cuando el componente se monta\r\n  }, [handleUpdate]);\r\n\r\n  // Manejadores para cambiar entre Fact y Gif\r\n  const handleShowFact = () => {\r\n    setShowFact(true); // Muestra el Cat Fact\r\n  };\r\n\r\n  const handleShowGif = () => {\r\n    setShowFact(false); // Muestra el Gif\r\n  };\r\n\r\n  return (\r\n    <div className=\"current-result\">\r\n      <div className=\"buttons-container\">\r\n        <button onClick={handleShowFact}>Cat Fact</button>\r\n        <button onClick={handleShowGif}>Gif</button>\r\n      </div>\r\n\r\n      {showFact ? (\r\n        <div className=\"fact-container\">\r\n          <p>{fact}</p>\r\n        </div>\r\n      ) : (\r\n        <div className=\"gif-container\">\r\n          {gifUrl && <img src={gifUrl} alt=\"Gif relacionado\" />}\r\n        </div>\r\n      )}\r\n\r\n      <button onClick={handleUpdate}>Actualizar</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CurrentResult;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}