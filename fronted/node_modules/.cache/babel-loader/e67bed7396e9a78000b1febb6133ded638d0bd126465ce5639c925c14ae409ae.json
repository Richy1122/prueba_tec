{"ast":null,"code":"import axios from 'axios';\n\n// Define la URL de tu API\nconst API_URL = 'http://localhost:5270/api/history'; // Asegúrate de ajustar esta URL según tu backend\n\n// Función para obtener un Cat Fact desde el backend\nexport const getCatFact = async () => {\n  try {\n    const response = await axios.get('/api/catfact/fact'); // Ajusta esta URL según tu configuración\n    return response;\n  } catch (error) {\n    console.error('Error obteniendo el Cat Fact', error);\n    throw error;\n  }\n};\n\n// Función para obtener un Gif relacionado desde el backend\nexport const getGif = async query => {\n  try {\n    const apiUrl = `http://localhost:5270/api/gif?query=${encodeURIComponent(query)}`;\n    const response = await fetch(apiUrl);\n    if (!response.ok) {\n      throw new Error('Error en la respuesta del servidor');\n    }\n    const data = await response.json();\n    return data; // Este debe contener la URL del gif desde tu backend\n  } catch (error) {\n    console.error('Error obteniendo el Gif', error);\n    throw error;\n  }\n};\n\n// Función para obtener el historial de búsquedas\nexport const getHistory = async () => {\n  try {\n    const response = await axios.get(API_URL);\n    return response;\n  } catch (error) {\n    console.error(\"Error al obtener historial:\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_URL","getCatFact","response","get","error","console","getGif","query","apiUrl","encodeURIComponent","fetch","ok","Error","data","json","getHistory"],"sources":["C:/Users/Richy/Documents/prueba_tecnica/fronted/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Define la URL de tu API\r\nconst API_URL = 'http://localhost:5270/api/history'; // Asegúrate de ajustar esta URL según tu backend\r\n\r\n// Función para obtener un Cat Fact desde el backend\r\nexport const getCatFact = async () => {\r\n  try {\r\n    const response = await axios.get('/api/catfact/fact'); // Ajusta esta URL según tu configuración\r\n    return response;\r\n  } catch (error) {\r\n    console.error('Error obteniendo el Cat Fact', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Función para obtener un Gif relacionado desde el backend\r\nexport const getGif = async (query) => {\r\n    try {\r\n      const apiUrl = `http://localhost:5270/api/gif?query=${encodeURIComponent(query)}`;\r\n      const response = await fetch(apiUrl);\r\n  \r\n      if (!response.ok) {\r\n        throw new Error('Error en la respuesta del servidor');\r\n      }\r\n  \r\n      const data = await response.json();\r\n      return data; // Este debe contener la URL del gif desde tu backend\r\n    } catch (error) {\r\n      console.error('Error obteniendo el Gif', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n\r\n// Función para obtener el historial de búsquedas\r\nexport const getHistory = async () => {\r\n    try {\r\n      const response = await axios.get(API_URL);\r\n      return response;\r\n    } catch (error) {\r\n      console.error(\"Error al obtener historial:\", error);\r\n      throw error;\r\n    }};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,OAAO,GAAG,mCAAmC,CAAC,CAAC;;AAErD;AACA,OAAO,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;EACpC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,mBAAmB,CAAC,CAAC,CAAC;IACvD,OAAOD,QAAQ;EACjB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACpD,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAME,MAAM,GAAG,MAAOC,KAAK,IAAK;EACnC,IAAI;IACF,MAAMC,MAAM,GAAG,uCAAuCC,kBAAkB,CAACF,KAAK,CAAC,EAAE;IACjF,MAAML,QAAQ,GAAG,MAAMQ,KAAK,CAACF,MAAM,CAAC;IAEpC,IAAI,CAACN,QAAQ,CAACS,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,oCAAoC,CAAC;IACvD;IAEA,MAAMC,IAAI,GAAG,MAAMX,QAAQ,CAACY,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI,CAAC,CAAC;EACf,CAAC,CAAC,OAAOT,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,MAAMA,KAAK;EACb;AACF,CAAC;;AAGH;AACA,OAAO,MAAMW,UAAU,GAAG,MAAAA,CAAA,KAAY;EAClC,IAAI;IACF,MAAMb,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAACH,OAAO,CAAC;IACzC,OAAOE,QAAQ;EACjB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACnD,MAAMA,KAAK;EACb;AAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}